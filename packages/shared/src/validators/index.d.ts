import { z } from 'zod';
export declare const usernameSchema: z.ZodString;
export declare const emailSchema: z.ZodString;
export declare const passwordSchema: z.ZodString;
export declare const postalCodeSchema: z.ZodString;
export declare const phoneSchema: z.ZodOptional<z.ZodString>;
export declare const uuidSchema: z.ZodString;
export declare const createUserSchema: z.ZodObject<{
    username: z.ZodString;
    email: z.ZodString;
    password: z.ZodString;
    firstName: z.ZodString;
    lastName: z.ZodString;
    memberNumber: z.ZodOptional<z.ZodString>;
    avatarUrl: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
    memberSince: z.ZodOptional<z.ZodDate>;
    phone: z.ZodOptional<z.ZodString>;
    address: z.ZodOptional<z.ZodString>;
    postalCode: z.ZodOptional<z.ZodString>;
    city: z.ZodOptional<z.ZodString>;
    country: z.ZodDefault<z.ZodString>;
    latitude: z.ZodOptional<z.ZodNumber>;
    longitude: z.ZodOptional<z.ZodNumber>;
    website: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
    kennelName: z.ZodOptional<z.ZodString>;
    roles: z.ZodArray<z.ZodEnum<["BREEDER", "STUD_OWNER", "ADMIN", "MEMBER", "EDITOR"]>, "many">;
}, "strip", z.ZodTypeAny, {
    username: string;
    email: string;
    password: string;
    firstName: string;
    lastName: string;
    country: string;
    roles: ("BREEDER" | "STUD_OWNER" | "ADMIN" | "MEMBER" | "EDITOR")[];
    memberNumber?: string | undefined;
    avatarUrl?: string | undefined;
    memberSince?: Date | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    website?: string | undefined;
    kennelName?: string | undefined;
}, {
    username: string;
    email: string;
    password: string;
    firstName: string;
    lastName: string;
    roles: ("BREEDER" | "STUD_OWNER" | "ADMIN" | "MEMBER" | "EDITOR")[];
    memberNumber?: string | undefined;
    avatarUrl?: string | undefined;
    memberSince?: Date | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    website?: string | undefined;
    kennelName?: string | undefined;
}>;
export declare const updateUserSchema: z.ZodObject<{
    firstName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    phone: z.ZodOptional<z.ZodString>;
    address: z.ZodOptional<z.ZodString>;
    postalCode: z.ZodOptional<z.ZodString>;
    city: z.ZodOptional<z.ZodString>;
    country: z.ZodOptional<z.ZodString>;
    latitude: z.ZodOptional<z.ZodNumber>;
    longitude: z.ZodOptional<z.ZodNumber>;
    website: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
    kennelName: z.ZodOptional<z.ZodString>;
    isActive: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    firstName?: string | undefined;
    lastName?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    website?: string | undefined;
    kennelName?: string | undefined;
    isActive?: boolean | undefined;
}, {
    firstName?: string | undefined;
    lastName?: string | undefined;
    phone?: string | undefined;
    address?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    latitude?: number | undefined;
    longitude?: number | undefined;
    website?: string | undefined;
    kennelName?: string | undefined;
    isActive?: boolean | undefined;
}>;
export declare const loginSchema: z.ZodObject<{
    username: z.ZodString;
    password: z.ZodString;
}, "strip", z.ZodTypeAny, {
    username: string;
    password: string;
}, {
    username: string;
    password: string;
}>;
export declare const createDogSchema: z.ZodEffects<z.ZodEffects<z.ZodObject<{
    name: z.ZodString;
    gender: z.ZodEnum<["R", "H"]>;
    birthDate: z.ZodDate;
    deathDate: z.ZodOptional<z.ZodDate>;
    color: z.ZodString;
    microchipId: z.ZodOptional<z.ZodString>;
    pedigreeNumber: z.ZodOptional<z.ZodString>;
    isStudAvailable: z.ZodDefault<z.ZodBoolean>;
    description: z.ZodOptional<z.ZodString>;
    motherId: z.ZodOptional<z.ZodString>;
    fatherId: z.ZodOptional<z.ZodString>;
    litterNumber: z.ZodOptional<z.ZodString>;
    website: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
    breedingStatus: z.ZodOptional<z.ZodEnum<["VERSTORBEN", "NICHT_VERFUEGBAR", "WURF_GEPLANT", "WURF_VORHANDEN"]>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    isStudAvailable: boolean;
    website?: string | undefined;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    website?: string | undefined;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    isStudAvailable?: boolean | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}>, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    isStudAvailable: boolean;
    website?: string | undefined;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    website?: string | undefined;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    isStudAvailable?: boolean | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}>, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    isStudAvailable: boolean;
    website?: string | undefined;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    website?: string | undefined;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    isStudAvailable?: boolean | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}>;
export declare const updateDogSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    gender: z.ZodOptional<z.ZodEnum<["R", "H"]>>;
    birthDate: z.ZodOptional<z.ZodDate>;
    deathDate: z.ZodOptional<z.ZodDate>;
    color: z.ZodOptional<z.ZodString>;
    microchipId: z.ZodOptional<z.ZodString>;
    pedigreeNumber: z.ZodOptional<z.ZodString>;
    isStudAvailable: z.ZodOptional<z.ZodBoolean>;
    description: z.ZodOptional<z.ZodString>;
    motherId: z.ZodOptional<z.ZodString>;
    fatherId: z.ZodOptional<z.ZodString>;
    litterNumber: z.ZodOptional<z.ZodString>;
    website: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
    breedingStatus: z.ZodOptional<z.ZodEnum<["VERSTORBEN", "NICHT_VERFUEGBAR", "WURF_GEPLANT", "WURF_VORHANDEN"]>>;
    isActive: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    website?: string | undefined;
    isActive?: boolean | undefined;
    name?: string | undefined;
    gender?: "R" | "H" | undefined;
    birthDate?: Date | undefined;
    deathDate?: Date | undefined;
    color?: string | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    isStudAvailable?: boolean | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}, {
    website?: string | undefined;
    isActive?: boolean | undefined;
    name?: string | undefined;
    gender?: "R" | "H" | undefined;
    birthDate?: Date | undefined;
    deathDate?: Date | undefined;
    color?: string | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    isStudAvailable?: boolean | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    breedingStatus?: "VERSTORBEN" | "NICHT_VERFUEGBAR" | "WURF_GEPLANT" | "WURF_VORHANDEN" | undefined;
}>;
export declare const createHealthRecordSchema: z.ZodObject<{
    dogId: z.ZodString;
    recordType: z.ZodEnum<["VACCINATION", "HEALTH_CERTIFICATE", "BREEDING_CERTIFICATE", "OTHER"]>;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    recordDate: z.ZodDate;
    expiryDate: z.ZodOptional<z.ZodDate>;
    veterinarian: z.ZodOptional<z.ZodString>;
    documentUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    dogId: string;
    recordType: "VACCINATION" | "HEALTH_CERTIFICATE" | "BREEDING_CERTIFICATE" | "OTHER";
    title: string;
    recordDate: Date;
    description?: string | undefined;
    expiryDate?: Date | undefined;
    veterinarian?: string | undefined;
    documentUrl?: string | undefined;
}, {
    dogId: string;
    recordType: "VACCINATION" | "HEALTH_CERTIFICATE" | "BREEDING_CERTIFICATE" | "OTHER";
    title: string;
    recordDate: Date;
    description?: string | undefined;
    expiryDate?: Date | undefined;
    veterinarian?: string | undefined;
    documentUrl?: string | undefined;
}>;
export declare const updateHealthRecordSchema: z.ZodObject<{
    recordType: z.ZodOptional<z.ZodEnum<["VACCINATION", "HEALTH_CERTIFICATE", "BREEDING_CERTIFICATE", "OTHER"]>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    recordDate: z.ZodOptional<z.ZodDate>;
    expiryDate: z.ZodOptional<z.ZodDate>;
    veterinarian: z.ZodOptional<z.ZodString>;
    documentUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    recordType?: "VACCINATION" | "HEALTH_CERTIFICATE" | "BREEDING_CERTIFICATE" | "OTHER" | undefined;
    title?: string | undefined;
    recordDate?: Date | undefined;
    expiryDate?: Date | undefined;
    veterinarian?: string | undefined;
    documentUrl?: string | undefined;
}, {
    description?: string | undefined;
    recordType?: "VACCINATION" | "HEALTH_CERTIFICATE" | "BREEDING_CERTIFICATE" | "OTHER" | undefined;
    title?: string | undefined;
    recordDate?: Date | undefined;
    expiryDate?: Date | undefined;
    veterinarian?: string | undefined;
    documentUrl?: string | undefined;
}>;
export declare const createMedicalFindingSchema: z.ZodObject<{
    dogId: z.ZodString;
    date: z.ZodDate;
    shortDescription: z.ZodString;
    remarks: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    date: Date;
    dogId: string;
    shortDescription: string;
    remarks?: string | undefined;
}, {
    date: Date;
    dogId: string;
    shortDescription: string;
    remarks?: string | undefined;
}>;
export declare const updateMedicalFindingSchema: z.ZodObject<{
    date: z.ZodOptional<z.ZodDate>;
    shortDescription: z.ZodOptional<z.ZodString>;
    remarks: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    date?: Date | undefined;
    shortDescription?: string | undefined;
    remarks?: string | undefined;
}, {
    date?: Date | undefined;
    shortDescription?: string | undefined;
    remarks?: string | undefined;
}>;
export declare const createAwardSchema: z.ZodObject<{
    dogId: z.ZodString;
    code: z.ZodString;
    date: z.ZodOptional<z.ZodDate>;
    description: z.ZodString;
    issuer: z.ZodString;
}, "strip", z.ZodTypeAny, {
    code: string;
    description: string;
    dogId: string;
    issuer: string;
    date?: Date | undefined;
}, {
    code: string;
    description: string;
    dogId: string;
    issuer: string;
    date?: Date | undefined;
}>;
export declare const updateAwardSchema: z.ZodObject<{
    code: z.ZodOptional<z.ZodString>;
    date: z.ZodOptional<z.ZodDate>;
    description: z.ZodOptional<z.ZodString>;
    issuer: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    code?: string | undefined;
    date?: Date | undefined;
    description?: string | undefined;
    issuer?: string | undefined;
}, {
    code?: string | undefined;
    date?: Date | undefined;
    description?: string | undefined;
    issuer?: string | undefined;
}>;
export declare const createGeneticTestSchema: z.ZodObject<{
    dogId: z.ZodString;
    testType: z.ZodEnum<["HD", "ED", "PRA", "DM", "VWD", "OTHER"]>;
    testDate: z.ZodDate;
    result: z.ZodEnum<["NORMAL", "CARRIER", "AFFECTED", "UNKNOWN"]>;
    laboratory: z.ZodString;
    certificateNumber: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    dogId: string;
    testType: "OTHER" | "HD" | "ED" | "PRA" | "DM" | "VWD";
    testDate: Date;
    result: "NORMAL" | "CARRIER" | "AFFECTED" | "UNKNOWN";
    laboratory: string;
    certificateNumber?: string | undefined;
    notes?: string | undefined;
}, {
    dogId: string;
    testType: "OTHER" | "HD" | "ED" | "PRA" | "DM" | "VWD";
    testDate: Date;
    result: "NORMAL" | "CARRIER" | "AFFECTED" | "UNKNOWN";
    laboratory: string;
    certificateNumber?: string | undefined;
    notes?: string | undefined;
}>;
export declare const updateGeneticTestSchema: z.ZodObject<{
    testType: z.ZodOptional<z.ZodEnum<["HD", "ED", "PRA", "DM", "VWD", "OTHER"]>>;
    testDate: z.ZodOptional<z.ZodDate>;
    result: z.ZodOptional<z.ZodEnum<["NORMAL", "CARRIER", "AFFECTED", "UNKNOWN"]>>;
    laboratory: z.ZodOptional<z.ZodString>;
    certificateNumber: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    testType?: "OTHER" | "HD" | "ED" | "PRA" | "DM" | "VWD" | undefined;
    testDate?: Date | undefined;
    result?: "NORMAL" | "CARRIER" | "AFFECTED" | "UNKNOWN" | undefined;
    laboratory?: string | undefined;
    certificateNumber?: string | undefined;
    notes?: string | undefined;
}, {
    testType?: "OTHER" | "HD" | "ED" | "PRA" | "DM" | "VWD" | undefined;
    testDate?: Date | undefined;
    result?: "NORMAL" | "CARRIER" | "AFFECTED" | "UNKNOWN" | undefined;
    laboratory?: string | undefined;
    certificateNumber?: string | undefined;
    notes?: string | undefined;
}>;
export declare const createStudServiceSchema: z.ZodObject<{
    studDogId: z.ZodString;
    isAvailable: z.ZodDefault<z.ZodBoolean>;
    price: z.ZodOptional<z.ZodNumber>;
    description: z.ZodOptional<z.ZodString>;
    contactInfo: z.ZodString;
    location: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    studDogId: string;
    isAvailable: boolean;
    contactInfo: string;
    description?: string | undefined;
    price?: number | undefined;
    location?: string | undefined;
}, {
    studDogId: string;
    contactInfo: string;
    description?: string | undefined;
    isAvailable?: boolean | undefined;
    price?: number | undefined;
    location?: string | undefined;
}>;
export declare const updateStudServiceSchema: z.ZodObject<{
    isAvailable: z.ZodOptional<z.ZodBoolean>;
    price: z.ZodOptional<z.ZodNumber>;
    description: z.ZodOptional<z.ZodString>;
    contactInfo: z.ZodOptional<z.ZodString>;
    location: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    isAvailable?: boolean | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
}, {
    description?: string | undefined;
    isAvailable?: boolean | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
}>;
export declare const createLitterSchema: z.ZodEffects<z.ZodObject<{
    motherId: z.ZodString;
    fatherId: z.ZodOptional<z.ZodString>;
    litterNumber: z.ZodString;
    litterSequence: z.ZodOptional<z.ZodString>;
    plannedDate: z.ZodOptional<z.ZodDate>;
    expectedDate: z.ZodOptional<z.ZodDate>;
    actualDate: z.ZodOptional<z.ZodDate>;
    status: z.ZodDefault<z.ZodEnum<["PLANNED", "IN_PROGRESS", "BORN", "AVAILABLE", "RESERVED", "SOLD", "CANCELLED"]>>;
    expectedPuppies: z.ZodOptional<z.ZodNumber>;
    actualPuppies: z.ZodOptional<z.ZodNumber>;
    puppyColors: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        born: z.ZodNumber;
        available: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        born: number;
        available: number;
    }, {
        born: number;
        available: number;
    }>>>;
    av: z.ZodOptional<z.ZodNumber>;
    iz: z.ZodOptional<z.ZodNumber>;
    description: z.ZodOptional<z.ZodString>;
    isPublic: z.ZodDefault<z.ZodBoolean>;
    contactInfo: z.ZodOptional<z.ZodString>;
    price: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    website: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
    imageUrl: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
}, "strip", z.ZodTypeAny, {
    status: "PLANNED" | "IN_PROGRESS" | "BORN" | "AVAILABLE" | "RESERVED" | "SOLD" | "CANCELLED";
    motherId: string;
    litterNumber: string;
    isPublic: boolean;
    website?: string | undefined;
    description?: string | undefined;
    fatherId?: string | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
    litterSequence?: string | undefined;
    plannedDate?: Date | undefined;
    expectedDate?: Date | undefined;
    actualDate?: Date | undefined;
    expectedPuppies?: number | undefined;
    actualPuppies?: number | undefined;
    puppyColors?: Record<string, {
        born: number;
        available: number;
    }> | undefined;
    av?: number | undefined;
    iz?: number | undefined;
    imageUrl?: string | undefined;
}, {
    motherId: string;
    litterNumber: string;
    status?: "PLANNED" | "IN_PROGRESS" | "BORN" | "AVAILABLE" | "RESERVED" | "SOLD" | "CANCELLED" | undefined;
    website?: string | undefined;
    description?: string | undefined;
    fatherId?: string | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
    litterSequence?: string | undefined;
    plannedDate?: Date | undefined;
    expectedDate?: Date | undefined;
    actualDate?: Date | undefined;
    expectedPuppies?: number | undefined;
    actualPuppies?: number | undefined;
    puppyColors?: Record<string, {
        born: number;
        available: number;
    }> | undefined;
    av?: number | undefined;
    iz?: number | undefined;
    isPublic?: boolean | undefined;
    imageUrl?: string | undefined;
}>, {
    status: "PLANNED" | "IN_PROGRESS" | "BORN" | "AVAILABLE" | "RESERVED" | "SOLD" | "CANCELLED";
    motherId: string;
    litterNumber: string;
    isPublic: boolean;
    website?: string | undefined;
    description?: string | undefined;
    fatherId?: string | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
    litterSequence?: string | undefined;
    plannedDate?: Date | undefined;
    expectedDate?: Date | undefined;
    actualDate?: Date | undefined;
    expectedPuppies?: number | undefined;
    actualPuppies?: number | undefined;
    puppyColors?: Record<string, {
        born: number;
        available: number;
    }> | undefined;
    av?: number | undefined;
    iz?: number | undefined;
    imageUrl?: string | undefined;
}, {
    motherId: string;
    litterNumber: string;
    status?: "PLANNED" | "IN_PROGRESS" | "BORN" | "AVAILABLE" | "RESERVED" | "SOLD" | "CANCELLED" | undefined;
    website?: string | undefined;
    description?: string | undefined;
    fatherId?: string | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
    litterSequence?: string | undefined;
    plannedDate?: Date | undefined;
    expectedDate?: Date | undefined;
    actualDate?: Date | undefined;
    expectedPuppies?: number | undefined;
    actualPuppies?: number | undefined;
    puppyColors?: Record<string, {
        born: number;
        available: number;
    }> | undefined;
    av?: number | undefined;
    iz?: number | undefined;
    isPublic?: boolean | undefined;
    imageUrl?: string | undefined;
}>;
export declare const updateLitterSchema: z.ZodObject<{
    fatherId: z.ZodOptional<z.ZodString>;
    litterNumber: z.ZodOptional<z.ZodString>;
    litterSequence: z.ZodOptional<z.ZodString>;
    plannedDate: z.ZodOptional<z.ZodDate>;
    expectedDate: z.ZodOptional<z.ZodDate>;
    actualDate: z.ZodOptional<z.ZodDate>;
    status: z.ZodOptional<z.ZodEnum<["PLANNED", "IN_PROGRESS", "BORN", "AVAILABLE", "RESERVED", "SOLD", "CANCELLED"]>>;
    expectedPuppies: z.ZodOptional<z.ZodNumber>;
    actualPuppies: z.ZodOptional<z.ZodNumber>;
    puppyColors: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        born: z.ZodNumber;
        available: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        born: number;
        available: number;
    }, {
        born: number;
        available: number;
    }>>>;
    av: z.ZodOptional<z.ZodNumber>;
    iz: z.ZodOptional<z.ZodNumber>;
    description: z.ZodOptional<z.ZodString>;
    isPublic: z.ZodOptional<z.ZodBoolean>;
    contactInfo: z.ZodOptional<z.ZodString>;
    price: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    website: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
    imageUrl: z.ZodUnion<[z.ZodOptional<z.ZodString>, z.ZodLiteral<"">]>;
}, "strip", z.ZodTypeAny, {
    status?: "PLANNED" | "IN_PROGRESS" | "BORN" | "AVAILABLE" | "RESERVED" | "SOLD" | "CANCELLED" | undefined;
    website?: string | undefined;
    description?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
    litterSequence?: string | undefined;
    plannedDate?: Date | undefined;
    expectedDate?: Date | undefined;
    actualDate?: Date | undefined;
    expectedPuppies?: number | undefined;
    actualPuppies?: number | undefined;
    puppyColors?: Record<string, {
        born: number;
        available: number;
    }> | undefined;
    av?: number | undefined;
    iz?: number | undefined;
    isPublic?: boolean | undefined;
    imageUrl?: string | undefined;
}, {
    status?: "PLANNED" | "IN_PROGRESS" | "BORN" | "AVAILABLE" | "RESERVED" | "SOLD" | "CANCELLED" | undefined;
    website?: string | undefined;
    description?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    price?: number | undefined;
    contactInfo?: string | undefined;
    location?: string | undefined;
    litterSequence?: string | undefined;
    plannedDate?: Date | undefined;
    expectedDate?: Date | undefined;
    actualDate?: Date | undefined;
    expectedPuppies?: number | undefined;
    actualPuppies?: number | undefined;
    puppyColors?: Record<string, {
        born: number;
        available: number;
    }> | undefined;
    av?: number | undefined;
    iz?: number | undefined;
    isPublic?: boolean | undefined;
    imageUrl?: string | undefined;
}>;
export declare const dogSearchSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    gender: z.ZodOptional<z.ZodEnum<["R", "H"]>>;
    color: z.ZodOptional<z.ZodString>;
    ownerId: z.ZodOptional<z.ZodString>;
    isStudAvailable: z.ZodOptional<z.ZodBoolean>;
    birthDateFrom: z.ZodOptional<z.ZodDate>;
    birthDateTo: z.ZodOptional<z.ZodDate>;
    postalCode: z.ZodOptional<z.ZodString>;
    radius: z.ZodOptional<z.ZodNumber>;
    page: z.ZodDefault<z.ZodNumber>;
    limit: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    page: number;
    limit: number;
    postalCode?: string | undefined;
    name?: string | undefined;
    gender?: "R" | "H" | undefined;
    color?: string | undefined;
    isStudAvailable?: boolean | undefined;
    ownerId?: string | undefined;
    birthDateFrom?: Date | undefined;
    birthDateTo?: Date | undefined;
    radius?: number | undefined;
}, {
    postalCode?: string | undefined;
    name?: string | undefined;
    gender?: "R" | "H" | undefined;
    color?: string | undefined;
    isStudAvailable?: boolean | undefined;
    ownerId?: string | undefined;
    birthDateFrom?: Date | undefined;
    birthDateTo?: Date | undefined;
    radius?: number | undefined;
    page?: number | undefined;
    limit?: number | undefined;
}>;
export declare const userSearchSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
    role: z.ZodOptional<z.ZodEnum<["BREEDER", "STUD_OWNER", "ADMIN", "MEMBER", "EDITOR"]>>;
    city: z.ZodOptional<z.ZodString>;
    postalCode: z.ZodOptional<z.ZodString>;
    page: z.ZodDefault<z.ZodNumber>;
    limit: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    page: number;
    limit: number;
    email?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    name?: string | undefined;
    role?: "BREEDER" | "STUD_OWNER" | "ADMIN" | "MEMBER" | "EDITOR" | undefined;
}, {
    email?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    name?: string | undefined;
    page?: number | undefined;
    limit?: number | undefined;
    role?: "BREEDER" | "STUD_OWNER" | "ADMIN" | "MEMBER" | "EDITOR" | undefined;
}>;
export declare const dogImportSchema: z.ZodObject<{
    legacyId: z.ZodString;
    name: z.ZodString;
    gender: z.ZodEnum<["R", "H"]>;
    birthDate: z.ZodDate;
    deathDate: z.ZodOptional<z.ZodDate>;
    color: z.ZodString;
    microchipId: z.ZodOptional<z.ZodString>;
    pedigreeNumber: z.ZodOptional<z.ZodString>;
    isStudAvailable: z.ZodDefault<z.ZodBoolean>;
    description: z.ZodOptional<z.ZodString>;
    motherId: z.ZodOptional<z.ZodString>;
    fatherId: z.ZodOptional<z.ZodString>;
    litterNumber: z.ZodOptional<z.ZodString>;
    healthRecords: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
    medicalFindings: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
    awards: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
    geneticTests: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
}, "strip", z.ZodTypeAny, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    isStudAvailable: boolean;
    legacyId: string;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    healthRecords?: any[] | undefined;
    medicalFindings?: any[] | undefined;
    awards?: any[] | undefined;
    geneticTests?: any[] | undefined;
}, {
    name: string;
    gender: "R" | "H";
    birthDate: Date;
    color: string;
    legacyId: string;
    deathDate?: Date | undefined;
    microchipId?: string | undefined;
    pedigreeNumber?: string | undefined;
    isStudAvailable?: boolean | undefined;
    description?: string | undefined;
    motherId?: string | undefined;
    fatherId?: string | undefined;
    litterNumber?: string | undefined;
    healthRecords?: any[] | undefined;
    medicalFindings?: any[] | undefined;
    awards?: any[] | undefined;
    geneticTests?: any[] | undefined;
}>;
export type CreateUserInput = z.infer<typeof createUserSchema>;
export type UpdateUserInput = z.infer<typeof updateUserSchema>;
export type LoginInput = z.infer<typeof loginSchema>;
export type CreateDogInput = z.infer<typeof createDogSchema>;
export type UpdateDogInput = z.infer<typeof updateDogSchema>;
export type CreateHealthRecordInput = z.infer<typeof createHealthRecordSchema>;
export type UpdateHealthRecordInput = z.infer<typeof updateHealthRecordSchema>;
export type CreateMedicalFindingInput = z.infer<typeof createMedicalFindingSchema>;
export type UpdateMedicalFindingInput = z.infer<typeof updateMedicalFindingSchema>;
export type CreateAwardInput = z.infer<typeof createAwardSchema>;
export type UpdateAwardInput = z.infer<typeof updateAwardSchema>;
export type CreateGeneticTestInput = z.infer<typeof createGeneticTestSchema>;
export type UpdateGeneticTestInput = z.infer<typeof updateGeneticTestSchema>;
export type CreateStudServiceInput = z.infer<typeof createStudServiceSchema>;
export type UpdateStudServiceInput = z.infer<typeof updateStudServiceSchema>;
export type CreateLitterInput = z.infer<typeof createLitterSchema>;
export type UpdateLitterInput = z.infer<typeof updateLitterSchema>;
export type DogSearchInput = z.infer<typeof dogSearchSchema>;
export type UserSearchInput = z.infer<typeof userSearchSchema>;
export type DogImportInput = z.infer<typeof dogImportSchema>;
//# sourceMappingURL=index.d.ts.map